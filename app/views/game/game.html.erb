<!DOCTYPE html>
<html lang="en">
<title>Inscription intérim</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
body,h1,h2,h3,h4,h5,h6 {font-family: "Lato", sans-serif}
.w3-bar,h1,button {font-family: "Montserrat", sans-serif}
.fa-anchor,.fa-coffee {font-size:200px}
</style>
<body>
<head>
    <meta charset="utf-8" />
    <title>Salle d&apos;attente</title>
    <style>canvas { display: block; margin: 0 auto; }</style>
    <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
</head>
<body>
  <!-- Casse brique style="display: none;" -->
  <div id='div_caseBrike'>
    <div class="w3-container w3-grey w3-center" style="padding:128px 16px">
        <h1 class="w3-margin w3-jumbo">Casse-briques</h1>
        <p class="w3-xlarge">Bienvenu dans Casse-briques! Le but est simple, casse les brisques et fait le meilleur score ! Fait gaffe de ne pas laisser la balle s échappez.</p>
        <p class="w3-xlarge">Utilise les flèche du clavier pour bouger ou maintient la souris.</p>
        <input class="w3-button w3-black w3-padding-large w3-large w3-margin-top" id="StartButton" type="button" value="Start"/>
        <input style="display: none; width: 100px; margin-left: auto; margin-right: auto;" class="w3-button w3-padding-large w3-large w3-margin-top" id="StopButton" type="button" value="Passé"/>
    </div>
    <style>canvas { display: block; margin: 0 auto; }</style>
    <canvas style="display: none;" id="myCanvas_CasseBrike"  width="480" height="320"></canvas>
  </div>
    <!-- ------------------- -->


    <script>  
      var PATIANCE = 0;
      var VOLONTE = 0;
      var PRECITION = 0;
      var SOLITAIRE = 0;
      var ORDONNE = 0;
      var LOGIQUE = 0;


      var NumGame = 0;
    //NumGame: 0 -> No game
    //NumGame: 1 -> CasseBrick
    //NumGame: 2 -> 

    $("#StopButton").click(function () {
      passe();
    });

    function nextGame()
    {
      if(NumGame==1)
      {
        document.getElementById("div_caseBrike").style.display = "none";
        
      }else if(NumGame==2)
      {

      }

    }

    function passe()
    {
      if(NumGame==1)
      {
        started_CasseBrick = false;
        PATIANCE -= 5;
        VOLONTE -= 3;
        PRECITION -= 3;
        SOLITAIRE -= 0;
        ORDONNE -= 0;
        LOGIQUE -= 1;

        nextGame()
        
      }else if(NumGame==2)
      {

      }

    }
//Casse brique-------------------------------------------------------------------
    var started_CasseBrick = false;
    $("#StartButton").click(function () {
      NumGame=1;
      document.getElementById("StopButton").style.display = "block";
        $("#SplashScreen").hide();
        $("#myCanvas_CasseBrike").show();
        $("#StartButton").hide();
        started_CasseBrick = true;
        draw_CasseBrik()
    });
    var canvas = document.getElementById("myCanvas_CasseBrike");
    var ctx = canvas.getContext("2d");
    var ballRadius = 10;
    var x = canvas.width/2;
    var y = canvas.height-30;
    var dx = 2;
    var dy = -2;
    var paddleHeight = 10;
    var paddleWidth = 75;
    var paddleX = (canvas.width-paddleWidth)/2;
    var rightPressed = false;
    var leftPressed = false;
    var brickRowCount = 5;
    var brickColumnCount = 3;
    var brickWidth = 75;
    var brickHeight = 20;
    var brickPadding = 10;
    var brickOffsetTop = 30;
    var brickOffsetLeft = 30;
    var score = 0;
    var lives = 1;
    var bricks = [];
    for(var c=0; c<brickColumnCount; c++) {
      bricks[c] = [];
      for(var r=0; r<brickRowCount; r++) {
        bricks[c][r] = { x: 0, y: 0, status: 1 };
      }
    }
      document.addEventListener("keydown", keyDownHandler, false);
      document.addEventListener("keyup", keyUpHandler, false);
      document.addEventListener("mousemove", mouseMoveHandler, false);

      function keyDownHandler(e) {
        if(e.keyCode == 39) {
          rightPressed = true;
        }
        else if(e.keyCode == 37) {
          leftPressed = true;
        }
      }
      function keyUpHandler(e) {
        if(e.keyCode == 39) {
          rightPressed = false;
        }
        else if(e.keyCode == 37) {
          leftPressed = false;
        }
      }
      function mouseMoveHandler(e) {
        var relativeX = e.clientX - canvas.offsetLeft;
        if(relativeX > 0 && relativeX < canvas.width) {
          paddleX = relativeX - paddleWidth/2;
        }
      }
      function collisionDetection() {
        for(var c=0; c<brickColumnCount; c++) {
          for(var r=0; r<brickRowCount; r++) {
            var b = bricks[c][r];
            if(b.status == 1) {
              if(x > b.x && x < b.x+brickWidth && y > b.y && y < b.y+brickHeight) {
                dy = -dy;
                b.status = 0;
                score++;
                if(score == brickRowCount*brickColumnCount) {

                  PATIANCE += 5;
                  VOLONTE += 3;
                  PRECITION += 3;
                  SOLITAIRE += 0;
                  ORDONNE += 0;
                  LOGIQUE += 0;
                  nextGame()
                }
              }
            }
          }
        }
      }

      function drawBall() {
        ctx.beginPath();
        ctx.arc(x, y, ballRadius, 0, Math.PI*2);
        ctx.fillStyle = "#04B404";
        ctx.fill();
        ctx.closePath();
      }
      function drawPaddle() {
        ctx.beginPath();
        ctx.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);
        ctx.fillStyle = "#04B404";
        ctx.fill();
        ctx.closePath();
      }
      function drawBricks() {
        for(var c=0; c<brickColumnCount; c++) {
          for(var r=0; r<brickRowCount; r++) {
            if(bricks[c][r].status == 1) {
              var brickX = (r*(brickWidth+brickPadding))+brickOffsetLeft;
              var brickY = (c*(brickHeight+brickPadding))+brickOffsetTop;
              bricks[c][r].x = brickX;
              bricks[c][r].y = brickY;
              ctx.beginPath();
              ctx.rect(brickX, brickY, brickWidth, brickHeight);
              ctx.fillStyle = "#04B404";
              ctx.fill();
              ctx.closePath();
            }
          }
        }
      }
      function drawScore() {
        ctx.font = "16px Arial";
        ctx.fillStyle = "#FFFFFF";
        ctx.fillText("Score: "+score, 8, 20);
      }
      function drawLives() {
        ctx.font = "16px Arial";
        ctx.fillStyle = "#FFFFFF";
        ctx.fillText("Lives: "+lives, canvas.width-65, 20);
      }

      function draw_CasseBrik() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        drawBricks();
        drawBall();
        drawPaddle();
        drawScore();
        drawLives();
        collisionDetection();
       
        if(x + dx > canvas.width-ballRadius || x + dx < ballRadius) {
          dx = -dx;
        }
        if(y + dy < ballRadius) {
          dy = -dy;
        }
        else if(y + dy > canvas.height-ballRadius) {
          if(x > paddleX && x < paddleX + paddleWidth) {
            dy = -dy;
          }
          else {
            lives--;
            if(!lives) {

              PATIANCE += 2;
              VOLONTE += 1;
              PRECITION += 1;
              SOLITAIRE += 0;
              ORDONNE += 0;
              LOGIQUE += 0;
              nextGame()
            }
            else {
              x = canvas.width/2;
              y = canvas.height-30;
              dx = 1;
              dy = 1;
              paddleX = (canvas.width-paddleWidth)/2;
            }
          }
        }

        if(rightPressed && paddleX < canvas.width-paddleWidth) {
          paddleX += 7;
        }
        else if(leftPressed && paddleX > 0) {
          paddleX -= 7;
        }

        x += dx;
        y += dy;
        if(started_CasseBrick)
          requestAnimationFrame(draw_CasseBrik);
      }
//Casse brique-------------------------------------------------------------------
    </script>
</body>
</html>